#!/usr/bin/env nextflow
// General parameters 

conda {
    enabled = true
    useMamba = true
    cacheDir = "miniforge3/envs"
}

singularity {
    enabled = true
    runOptions = "--bind $PWD"
}

// running parameters
process {
    executor = 'local' // change here if slurm or PBS is used
    withLabel: resource_intensive {
        cpus = 48
        memory = 200.GB
        }
    withLabel: low_resources {
        cpus = 1
        memory = 5.GB
    }
    withLabel: medium_resources {
        cpus = 20
        memory = 10.GB
    }
    withLabel: kmertools {
        conda = 'envs/kmertools.yaml'
    }
    withLabel: busco {
        conda = '~/miniforge3/envs/busco/'
    }
    withLabel: inspector {
        conda = "envs/ins.yaml"
    }
    withLabel: nextpolish {
        conda = 'envs/nextpolish.yaml'
    }
    withLabel: goldrush {
        conda = 'evs/goldrush.yaml'
    }
    withLabel: earlGrey {
        conda = 'envs/earlgrey.yaml'
    }
    withLabel: haplotigs {
        conda = 'envs/haplotigs.yaml'
    }
    withLabel: porechop {
        conda = 'envs/porechop.yaml'
    }
    withLabel: yacrd {
        conda = 'envs/yacrd.yaml'
    }
    withLabel: nanoplot {
        conda = 'envs/nanoplot.yaml'
    }
    withLabel: blobtools {
        conda = 'envs/blobtools.yaml'
    }
    withLabel: cutadapt {
        conda = 'envs/cutadapt.yaml'
    }
    withLabel: multiqc {
        conda = 'envs/multiqc.yaml'
    }
    withLabel: minimap {
	    conda = 'envs/minimap.yaml'}
    withLabel: qualimap {
	    conda = 'envs/qualimap.yaml'} 
//   scratch = true // uncomment if there is a scatch disk (I suggest to indicate where it is)
    withLabel: mitohifi {
	    container = 'software/mitohifi.sif'}
}

#!/usr/bin/env nextflow
// General parameters 

conda {
    enabled = true
    useMamba = true
    cacheDir = "miniforge3/envs"
}

singularity {
    enabled = true
    runOptions = "-B $HOME -H $HOME:/media/jmf/DATOS2/mylena/"
    autoMounts = true
}

// running parameters
process {
    executor = 'local' // change here if slurm or PBS is used
    withLabel: resource_intensive {
        cpus = 20
        memory = 50.GB
        }
    withLabel: low_resources {
        cpus = 1
        memory = 5.GB
    }
    withLabel: medium_resources {
        cpus = 10
        memory = 10.GB
    }
    withLabel: kmertools {
        conda = 'envs/kmertools.yaml'
    }
    withLabel: busco {
        conda = '/media/jmf/DATOS2/mylena/miniforge3/envs/busco'
    }
    withLabel: inspector {
        conda = "envs/ins.yaml"
    }
    withLabel: nextpolish {
        conda = 'envs/nextpolish.yaml'
    }
    withLabel: goldrush {
        conda = 'evs/goldrush.yaml'
    }
    withLabel: earlGrey {
        conda = '/media/jmf/DATOS2/PROGRAMAS/miniforge3/envs/earlgrey/'
    }
    withLabel: haplotigs {
        conda = 'envs/haplotigs.yaml'
    }
    withLabel: porechop {
        conda = 'envs/porechop.yaml'
    }
    withLabel: yacrd {
        conda = 'envs/yacrd.yaml'
    }
    withLabel: nanoplot {
        conda = 'envs/nanoplot.yaml'
    }
    withLabel: blobtools {
        conda = 'envs/blobtools.yaml'
    }
    withLabel: cutadapt {
        conda = 'envs/cutadapt.yaml'
    }
    withLabel: multiqc {
        conda = 'envs/multiqc.yaml'
    }
    withLabel: minimap {
	    conda = 'envs/minimap.yaml'}
    withLabel: qualimap {
	    conda = 'envs/qualimap.yaml'} 
//   scratch = true // uncomment if there is a scatch disk (I suggest to indicate where it is)
    withLabel: mitohifi {
	    container = 'software/mitohifi.sif'}
    withLabel: discvrseq {
            conda = 'envs/java.yaml'}
    withLabel: vcflib {
            conda = 'envs/vcflib.yaml'}
    withLabel: python {
            conda = 'envs/python3.yaml'}
    withLabel: twiss {
            conda = 'envs/twiss.yaml'}
    withLabel: repeats {
	    conda = 'envs/repeat.yaml'}
    withLabel: whatshap {
            conda = 'envs/whatshap.yaml'}
    withLabel: braker {
            container = 'software/braker3.sif'}
    withLabel: galba {
            container = "software/galba.sif"}
    withLabel: eggnog {
           conda = "envs/eggnog.yaml"}
}
